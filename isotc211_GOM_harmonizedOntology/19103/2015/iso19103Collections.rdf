<?xml version="1.0"?>

<!DOCTYPE rdf:RDF [
  <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
  <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
  <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
  <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
  <!ENTITY dc "http://purl.org/dc/elements/1.1/" >
  <!ENTITY dct "http://purl.org/dc/terms/" >
  <!ENTITY skos "http://www.w3.org/2004/02/skos/core#" >
  <!ENTITY iso19150-2 "http://def.isotc211.org/iso19150/-2/2012/base#" >
  <!ENTITY iso19103_2169 "http://def.isotc211.org/iso19103/2015/Numerics#" >
  <!ENTITY iso19103_2175 "http://def.isotc211.org/iso19103/2015/AnyType#" >
  <!ENTITY iso19103 "http://def.isotc211.org/iso19103/2015/Collections#" >

]>

  <!--++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- File name:         iso19103Collections.rdf   -->
  <!-- Generator:         GOM_Technologies::UML2OWL -->
  <!-- Generator version: 2.5                       -->
  <!-- File date:         8-10-2015                 -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++-->

<rdf:RDF xmlns="http://def.isotc211.org/iso19103/2015/Collections#"
  xml:base="http://def.isotc211.org/iso19103/2015/Collections"
  xmlns:owl="http://www.w3.org/2002/07/owl#"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:dct="http://purl.org/dc/terms/"
  xmlns:skos="http://www.w3.org/2004/02/skos/core#"
  xmlns:iso19150-2="http://def.isotc211.org/iso19150/-2/2012/base#"
  xmlns:iso19103_2169="http://def.isotc211.org/iso19103/2015/Numerics#"
  xmlns:iso19103_2175="http://def.isotc211.org/iso19103/2015/AnyType#"
  xmlns:iso19103="http://def.isotc211.org/iso19103/2015/Collections#">

  <!--++++++++++++++++++++++++++++++++++++++-->
  <!-- Ontology: ISO 19103:2015 Collections -->
  <!--++++++++++++++++++++++++++++++++++++++-->
  <owl:Ontology rdf:about="http://def.isotc211.org/iso19103/2015/Collections">
    <rdfs:label>ISO 19103:2015 Collections</rdfs:label>
    <dct:source>http://standards.iso.org/iso/19103/ed-2/en/</dct:source>
    <owl:versionInfo>2015</owl:versionInfo>
    <owl:imports rdf:resource="http://def.isotc211.org/iso19103/2015/Numerics"/>
    <owl:imports rdf:resource="http://def.isotc211.org/iso19103/2015/AnyType"/>
    <owl:imports rdf:resource="http://def.isotc211.org/iso19150/-2/2012/base"/>
  </owl:Ontology>

  <!--+++++++++++++++++-->
  <!-- Class: AsNumber -->
  <!--+++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;uAsNumber">
    <rdfs:label>AsNumber</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;uAsNumber.asNumber"/>
        <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;uAsNumber.asNumber"/>
        <owl:allValuesFrom rdf:resource="&iso19103_2169;Number"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <!--++++++++++++++++++++-->
  <!-- Class: AsCharacter -->
  <!--++++++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;uAsCharacter">
    <rdfs:label>AsCharacter</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;uAsCharacter.asCharacter"/>
        <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;uAsCharacter.asCharacter"/>
        <owl:allValuesFrom rdf:resource="&xsd;string"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <!--++++++++++-->
  <!-- Class: T -->
  <!--++++++++++-->
  <owl:Class rdf:about="&iso19103;T">
    <rdfs:label>T</rdfs:label>
    <skos:definition>This class is defined to deal with some UML software modeling glitches. In this standard, T is used as a parameter (of type .gu.class.gu.) to a parameterized class (often called a template). .gu.T.gu. is used to show the relationship between the parameterized class and instances of its type-valued parameters. .lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.TransfiniteSet.lt..sl.Class.gt..lt.Operation.gt.includes.lt..sl.Operation.gt..lt.Parameter.gt.element.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.TransfiniteSet.lt..sl.Class.gt..lt.Operation.gt.contains.lt..sl.Operation.gt..lt.Parameter.gt.element.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.Bag.lt..sl.Class.gt..lt.Operation.gt.excluding.lt..sl.Operation.gt..lt.Parameter.gt.object.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.Bag.lt..sl.Class.gt..lt.Operation.gt.including.lt..sl.Operation.gt..lt.Parameter.gt.object.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.Set.lt..sl.Class.gt..lt.Operation.gt.sum.lt..sl.Operation.gt..lt.Parameter.gt.Return.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.Set.lt..sl.Class.gt..lt.Operation.gt.including.lt..sl.Operation.gt..lt.Parameter.gt.object.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.Set.lt..sl.Class.gt..lt.Operation.gt.excluding.lt..sl.Operation.gt..lt.Parameter.gt.object.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.Sequence.lt..sl.Class.gt..lt.Operation.gt.at.lt..sl.Operation.gt..lt.Parameter.gt.Return.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.Sequence.lt..sl.Class.gt..lt.Operation.gt.prepend.lt..sl.Operation.gt..lt.Parameter.gt.element.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.Sequence.lt..sl.Class.gt..lt.Operation.gt.append.lt..sl.Operation.gt..lt.Parameter.gt.element.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt..lt.UsedBy.gt..lt.NameSpace.gt.ISO 19103 Conceptual Schema Language.lt..sl.NameSpace.gt..lt.Class.gt.CircularSequence.lt..sl.Class.gt..lt.Operation.gt.asSequence.lt..sl.Operation.gt..lt.Parameter.gt.firstObject.lt..sl.Parameter.gt..lt.Type.gt.T.lt..sl.Type.gt..lt.UsedBy.gt.</skos:definition>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:subClassOf rdf:resource="&iso19103_2175;Any"/>
  </owl:Class>

  <!--++++++++++++++++++-->
  <!-- Class: ValueType -->
  <!--++++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;ValueType">
    <rdfs:label>ValueType</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:subClassOf rdf:resource="&iso19103_2175;Any"/>
  </owl:Class>

  <!--++++++++++++-->
  <!-- Class: Bag -->
  <!--++++++++++++-->
  <owl:Class rdf:about="&iso19103;Bag">
    <rdfs:label>Bag</rdfs:label>
    <skos:definition>A bag is a type of set where the elements have been assigned an individual count (a integral ordering). </skos:definition>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
    <rdfs:subClassOf rdf:resource="&iso19103;Collection"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;Bag.element"/>
        <owl:allValuesFrom rdf:resource="&iso19103;T"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <!--+++++++++++++++++++++++++-->
  <!-- Class: CircularSequence -->
  <!--+++++++++++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;CircularSequence">
    <rdfs:label>CircularSequence</rdfs:label>
    <skos:definition>A circular sequence is a sequence that wraps back on itself, i. e. when the last  element is reached, the tail is the original sequence. The representation of a sequence is unique, but a circular sequence is equal to any circular sequence of the same length that is a circular permutation of itself. the fact that this is an equivalence  relation is an easy exercise, and is left to the reader.</skos:definition>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
    <rdfs:subClassOf rdf:resource="&iso19103;Sequence"/>
  </owl:Class>

  <!--+++++++++++++++++-->
  <!-- Class: CodeList -->
  <!--+++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;CodeList">
    <rdfs:label>CodeList</rdfs:label>
    <skos:definition>Essentially a code list is a mapping from a set of key values (elements of the code list) to actual values. Most code list will map integers to character strings, but some may map character strings to other (normally longer) character strings. Code list can be used in two major ways. First they can be used to associate one sort of name or value for another, such as long names for short ones, or standard names for local ones. Second, they can be used to give local information about an implementation, such as a list of standard units, or a list of class names used, etc.</skos:definition>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;CodeList.actualValue"/>
        <owl:allValuesFrom rdf:resource="&iso19103_2175;Any"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <!--+++++++++++++++++++-->
  <!-- Class: Collection -->
  <!--+++++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;Collection">
    <rdfs:label>Collection</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
    <rdfs:subClassOf rdf:resource="&iso19103;TransfiniteSet"/>
  </owl:Class>

  <!--+++++++++++++++++++-->
  <!-- Class: Dictionary -->
  <!--+++++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;Dictionary">
    <rdfs:label>Dictionary</rdfs:label>
    <skos:definition>Dictionary is a parameterized class used for defining discrete (finite) mappings from one domain (key) to another (value). It is typically used to represent name space ideas, such as the names of member attributes in a class instance mapping to the values of those members. In a metaclass for this, the member names would map the class of the members.  Dictionary has many implementations but is often referred to by one or anther locally-specific alias, such as Map, or a Set of KeyValuePair. As usual, any of these implementations can be used for Dictionary as long as the operations exits in some sense (they do not have to be public).</skos:definition>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;Dictionary.elements"/>
        <owl:allValuesFrom rdf:resource="&iso19103;KeyValuePair"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <!--++++++++++++++++-->
  <!-- Class: KeyType -->
  <!--++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;KeyType">
    <rdfs:label>KeyType</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
    <rdfs:subClassOf rdf:resource="&iso19103_2175;Any"/>
  </owl:Class>

  <!--+++++++++++++++++++++-->
  <!-- Class: KeyValuePair -->
  <!--+++++++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;KeyValuePair">
    <rdfs:label>KeyValuePair</rdfs:label>
    <skos:definition>Essentially a single part of a dictionary specifying one key and one value. </skos:definition>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;KeyValuePair.key"/>
        <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;KeyValuePair.key"/>
        <owl:allValuesFrom rdf:resource="&iso19103;KeyType"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;KeyValuePair.value"/>
        <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;KeyValuePair.value"/>
        <owl:allValuesFrom rdf:resource="&iso19103;ValueType"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <!--+++++++++++++++++-->
  <!-- Class: Sequence -->
  <!--+++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;Sequence">
    <rdfs:label>Sequence</rdfs:label>
    <skos:definition>A sequence is a type of set where the elements have been assigned offsets (a integral ordering). If the same element is assigned multiple offsets, then the sequence .gu.revisits.gu. the element for each assigned offset.  Logically, we can think of a sequence as a set of pairs .lt.element :T, offset : Integer.gt.. Since both element and offset must be equal for the ordered pair to be equal, there is no violation of the set semantics.  Not all numbered slots in a sequence must be occupied, and no offset may be occupied that exceeds the .gu.length..gu. {offset .gt. length implies element.isNull}</skos:definition>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
    <rdfs:subClassOf rdf:resource="&iso19103;Collection"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;Sequence.length"/>
        <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;Sequence.length"/>
        <owl:allValuesFrom rdf:resource="&xsd;integer"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;Sequence.element"/>
        <owl:maxCardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:maxCardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;Sequence.element"/>
        <owl:allValuesFrom rdf:resource="&iso19103;T"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <!--++++++++++++-->
  <!-- Class: Set -->
  <!--++++++++++++-->
  <owl:Class rdf:about="&iso19103;Set">
    <rdfs:label>Set</rdfs:label>
    <skos:definition>A finite set. See TransfiniteSet. The straight listing implementations of the set concept must be finite, since memory, although large, cannot be infinite. Sets are .gu.by lists.gu. implementations of the concept (hence must be finite). Transfinite sets are .gu.Boolean test.gu. implementations, and hence can be infinite, but cannot be modified one element at a time to any great degree of success. </skos:definition>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
    <rdfs:subClassOf rdf:resource="&iso19103;Collection"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;Set.size"/>
        <owl:cardinality rdf:datatype="&xsd;nonNegativeInteger">1</owl:cardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;Set.size"/>
        <owl:allValuesFrom rdf:resource="&xsd;integer"/>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty rdf:resource="&iso19103;Set.elements"/>
        <owl:allValuesFrom rdf:resource="&iso19103;T"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>

  <!--+++++++++++++++++++++++-->
  <!-- Class: TransfiniteSet -->
  <!--+++++++++++++++++++++++-->
  <owl:Class rdf:about="&iso19103;TransfiniteSet">
    <rdfs:label>TransfiniteSet</rdfs:label>
    <skos:definition>Transfinite set is the implementation of a mathematical set. Normally, sets in software implementation are finite, but in mathematics they are often infinite. Since most of the behavior of wither type of set can be defined by the same operations protocols, we list them here. In Implementations, infinite sets (instances of TransfiniteSet, but not of set) are most often defined by the Boolean operation .gu.includes.gu. which test for the inclusion of a particular .gu.T..gu.</skos:definition>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:isAbstract rdf:datatype="&xsd;boolean">true</iso19150-2:isAbstract>
  </owl:Class>

  <!--++++++++++++++++++++++++++-->
  <!-- ObjectProperty: asNumber -->
  <!--++++++++++++++++++++++++++-->
  <owl:ObjectProperty rdf:about="&iso19103;uAsNumber.asNumber">
    <skos:prefLabel>asNumber</skos:prefLabel>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:domain rdf:resource="&iso19103;uAsNumber"/>
    <rdfs:range rdf:resource="&iso19103_2169;Number"/>
  </owl:ObjectProperty>

  <!--+++++++++++++++++++++++++++++++-->
  <!-- DatatypeProperty: asCharacter -->
  <!--+++++++++++++++++++++++++++++++-->
  <owl:DatatypeProperty rdf:about="&iso19103;uAsCharacter.asCharacter">
    <rdfs:label>asCharacter</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:domain rdf:resource="&iso19103;uAsCharacter"/>
    <rdfs:range rdf:resource="&xsd;string"/>
  </owl:DatatypeProperty>

  <!--++++++++++++++++++++++++++++++++++-->
  <!-- ObjectProperty: KeyValuePair.key -->
  <!--++++++++++++++++++++++++++++++++++-->
  <owl:ObjectProperty rdf:about="&iso19103;KeyValuePair.key">
    <rdfs:label>key</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:domain rdf:resource="&iso19103;KeyValuePair"/>
    <rdfs:range rdf:resource="&iso19103;KeyType"/>
  </owl:ObjectProperty>

  <!--++++++++++++++++++++++++++++++++++++-->
  <!-- ObjectProperty: KeyValuePair.value -->
  <!--++++++++++++++++++++++++++++++++++++-->
  <owl:ObjectProperty rdf:about="&iso19103;KeyValuePair.value">
    <rdfs:label>value</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:domain rdf:resource="&iso19103;KeyValuePair"/>
    <rdfs:range rdf:resource="&iso19103;ValueType"/>
  </owl:ObjectProperty>

  <!--+++++++++++++++++++++++++++++++++++-->
  <!-- DatatypeProperty: Sequence.length -->
  <!--+++++++++++++++++++++++++++++++++++-->
  <owl:DatatypeProperty rdf:about="&iso19103;Sequence.length">
    <rdfs:label>length</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:domain rdf:resource="&iso19103;Sequence"/>
    <rdfs:range rdf:resource="&xsd;integer"/>
  </owl:DatatypeProperty>

  <!--++++++++++++++++++++++++++++-->
  <!-- DatatypeProperty: Set.size -->
  <!--++++++++++++++++++++++++++++-->
  <owl:DatatypeProperty rdf:about="&iso19103;Set.size">
    <rdfs:label>size</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:domain rdf:resource="&iso19103;Set"/>
    <rdfs:range rdf:resource="&xsd;integer"/>
  </owl:DatatypeProperty>

  <!--+++++++++++++++++++++++++++++-->
  <!-- ObjectProperty: Bag.element -->
  <!--+++++++++++++++++++++++++++++-->
  <owl:ObjectProperty rdf:about="&iso19103;Bag.element">
    <rdfs:label>element</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:aggregationType>partOfSharedAggregation</iso19150-2:aggregationType>
    <rdfs:domain rdf:resource="&iso19103;Bag"/>
    <rdfs:range rdf:resource="&iso19103;T"/>
  </owl:ObjectProperty>

  <!--++++++++++++++++++++++++++++++++++++++-->
  <!-- ObjectProperty: CodeList.actualValue -->
  <!--++++++++++++++++++++++++++++++++++++++-->
  <owl:ObjectProperty rdf:about="&iso19103;CodeList.actualValue">
    <rdfs:label>actualValue</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <rdfs:domain rdf:resource="&iso19103;CodeList"/>
    <rdfs:range rdf:resource="&iso19103_2175;Any"/>
  </owl:ObjectProperty>

  <!--+++++++++++++++++++++++++++++++++++++-->
  <!-- ObjectProperty: Dictionary.elements -->
  <!--+++++++++++++++++++++++++++++++++++++-->
  <owl:ObjectProperty rdf:about="&iso19103;Dictionary.elements">
    <rdfs:label>elements</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:aggregationType>partOfCompositeAggregation</iso19150-2:aggregationType>
    <rdfs:domain rdf:resource="&iso19103;Dictionary"/>
    <rdfs:range rdf:resource="&iso19103;KeyValuePair"/>
  </owl:ObjectProperty>

  <!--++++++++++++++++++++++++++++++++++-->
  <!-- ObjectProperty: Sequence.element -->
  <!--++++++++++++++++++++++++++++++++++-->
  <owl:ObjectProperty rdf:about="&iso19103;Sequence.element">
    <rdfs:label>element</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:aggregationType>partOfSharedAggregation</iso19150-2:aggregationType>
    <rdfs:domain rdf:resource="&iso19103;Sequence"/>
    <rdfs:range rdf:resource="&iso19103;T"/>
  </owl:ObjectProperty>

  <!--++++++++++++++++++++++++++++++-->
  <!-- ObjectProperty: Set.elements -->
  <!--++++++++++++++++++++++++++++++-->
  <owl:ObjectProperty rdf:about="&iso19103;Set.elements">
    <rdfs:label>elements</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <iso19150-2:aggregationType>partOfSharedAggregation</iso19150-2:aggregationType>
    <rdfs:domain rdf:resource="&iso19103;Set"/>
    <rdfs:range rdf:resource="&iso19103;T"/>
  </owl:ObjectProperty>

  <!--+++++++++++++-->
  <!-- Class: Code -->
  <!--+++++++++++++-->
  <owl:Class rdf:about="&iso19103;Code">
    <rdfs:label>Code</rdfs:label>
    <rdfs:isDefinedBy>http://standards.iso.org/iso/19103/ed-2/en/</rdfs:isDefinedBy>
    <owl:equivalentClass>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <owl:Class rdf:about="&iso19103;uAsNumber"/>
          <owl:Class rdf:about="&iso19103;uAsCharacter"/>
        </owl:unionOf>
      </owl:Class>
    </owl:equivalentClass>
  </owl:Class>

</rdf:RDF>

